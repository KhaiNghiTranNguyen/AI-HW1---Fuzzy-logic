import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl
# tạo hàm liên thuộc cho inputs
store_rating = ctrl.Antecedent(np.arange(0, 5.1, 0.1), 'store_rating')
sales_volume = ctrl.Antecedent(np.arange(0, 101, 1), 'sales_volume')
profit_margin = ctrl.Antecedent(np.arange(0, 101, 0.1), 'profit_margin')
seasonal_event = ctrl.Antecedent(np.arange(0, 11, 1), 'seasonal_event')
competitor_discounts = ctrl.Antecedent(np.arange(0, 71, 1), 'competitor_discounts')

discount = ctrl.Consequent(np.arange(0, 71, 0.1), 'discount')

store_rating['low'] = fuzz.trimf(store_rating.universe, [0, 0,4.0])
store_rating['medium'] = fuzz.trimf(store_rating.universe, [4, 4.25, 4.5])
store_rating['high'] = fuzz.trimf(store_rating.universe, [4.5, 5, 5])

sales_volume['low'] = fuzz.trimf(sales_volume.universe, [0, 0, 50])
sales_volume['medium'] = fuzz.trimf(sales_volume.universe, [50, 65, 80])
sales_volume['high'] = fuzz.trimf(sales_volume.universe, [80, 100, 100])

profit_margin['low'] = fuzz.trimf(profit_margin.universe, [0, 0, 30])
profit_margin['medium'] = fuzz.trimf(profit_margin.universe, [30,40,50])
profit_margin['high'] = fuzz.trimf(profit_margin.universe, [50, 75, 100])

seasonal_event['none'] = fuzz.trimf(seasonal_event.universe, [0, 0, 0])
seasonal_event['moderate'] = fuzz.trimf(seasonal_event.universe, [0, 2, 4])
seasonal_event['high'] = fuzz.trimf(seasonal_event.universe, [2, 6, 10])

competitor_discounts['low'] = fuzz.trimf(competitor_discounts.universe, [0, 0, 30])
competitor_discounts['medium'] = fuzz.trimf(competitor_discounts.universe, [20, 35, 50])
competitor_discounts['high'] = fuzz.trimf(competitor_discounts.universe, [50, 60, 70])

discount['very_low'] = fuzz.trimf(discount.universe, [0, 0, 5])
discount['low'] = fuzz.trimf(discount.universe, [5, 7.5, 10])
discount['medium'] = fuzz.trimf(discount.universe, [10, 15, 20])
discount['high'] = fuzz.trimf(discount.universe, [20, 30, 40])
discount['very_high'] = fuzz.trimf(discount.universe, [40, 55, 70])

rule1 = ctrl.Rule(store_rating['high'] & sales_volume['high'] & profit_margin['high'], discount['very_low'])
rule2 = ctrl.Rule(store_rating['low'] & sales_volume['low'] & profit_margin['high'], discount['high'])
rule3 = ctrl.Rule(seasonal_event['high'] & competitor_discounts['high'], discount['very_high'])
rule4 = ctrl.Rule(store_rating['medium'] & sales_volume['medium'] & profit_margin['medium'], discount['medium'])
rule5 = ctrl.Rule(competitor_discounts['low'] & profit_margin['low'] & sales_volume['high'], discount['very_low'])
rule6 = ctrl.Rule(store_rating['low'] & seasonal_event['none'], discount['medium'])
rule7 = ctrl.Rule(sales_volume['low'] & profit_margin['low'], discount['very_high'])

discount_ctrl = ctrl.ControlSystem([rule1, rule2, rule3, rule4, rule5, rule6, rule7])
discount_sim = ctrl.ControlSystemSimulation(discount_ctrl)

discount_sim.input['store_rating'] = 4.3  # Medium
discount_sim.input['sales_volume'] = 50  # Medium
discount_sim.input['profit_margin'] = 20  # Low
discount_sim.input['seasonal_event'] = 8  # High
discount_sim.input['competitor_discounts'] = 60  # High

discount_sim.compute()

# Output the result
print(f"Recommended Discount: {discount_sim.output['discount']}%")

# Visualize the results
discount.view(sim=discount_sim)
