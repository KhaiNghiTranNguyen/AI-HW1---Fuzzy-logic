#2.9
import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl

sentiment_score = ctrl.Antecedent(np.arange(0, 1.1, 0.1), 'sentiment_score')
emotion_intensity = ctrl.Antecedent(np.arange(0, 11, 0.1), 'emotion_intensity')
positive_words = ctrl.Antecedent(np.arange(0, 11, 1), 'positive_words')
negative_words = ctrl.Antecedent(np.arange(0, 11, 1), 'negative_words')
reviewsentiment = ctrl.Consequent(np.arange(0, 11, 0.1), 'sentiment')

sentiment_score['negative'] = fuzz.trimf(sentiment_score.universe, [0, 0, 0.3])
sentiment_score['neutral'] = fuzz.trimf(sentiment_score.universe, [0.3, 0.5, 0.7])
sentiment_score['positive'] = fuzz.trimf(sentiment_score.universe, [0.7, 1, 1])

emotion_intensity['low'] = fuzz.trimf(emotion_intensity.universe, [0, 0, 3])
emotion_intensity['medium'] = fuzz.trimf(emotion_intensity.universe, [3, 5, 7])
emotion_intensity['high'] = fuzz.trimf(emotion_intensity.universe, [7, 10, 10])

positive_words['few'] = fuzz.trimf(positive_words.universe, [0, 0, 2])
positive_words['some'] = fuzz.trimf(positive_words.universe, [2, 3.5, 5])
positive_words['many'] = fuzz.trimf(positive_words.universe, [5, 7.5, 10])

negative_words['few'] = fuzz.trimf(negative_words.universe, [0, 0, 2])
negative_words['some'] = fuzz.trimf(negative_words.universe, [2, 3.5, 5])
negative_words['many'] = fuzz.trimf(negative_words.universe, [5, 7.5, 10])

reviewsentiment['negative'] = fuzz.trimf(reviewsentiment.universe, [0, 0, 3])
reviewsentiment['neutral'] = fuzz.trimf(reviewsentiment.universe, [3, 5, 7])
reviewsentiment['positive'] = fuzz.trimf(reviewsentiment.universe, [7, 10, 10])

rule1 = ctrl.Rule(sentiment_score['negative'] & emotion_intensity['high'], reviewsentiment['negative'])
rule2 = ctrl.Rule(sentiment_score['negative'] & emotion_intensity['low'], reviewsentiment['neutral'])
rule3 = ctrl.Rule(sentiment_score['neutral'] & emotion_intensity['medium'], reviewsentiment['neutral'])
rule4 = ctrl.Rule(sentiment_score['positive'] & emotion_intensity['high'], reviewsentiment['positive'])

rule5 = ctrl.Rule(positive_words['many'] & negative_words['few'], reviewsentiment['positive'])
rule6 = ctrl.Rule(positive_words['few'] & negative_words['many'], reviewsentiment['negative'])
rule7 = ctrl.Rule(positive_words['some'] & negative_words['some'], reviewsentiment['neutral'])

rule8 = ctrl.Rule(sentiment_score['negative'] & negative_words['many'] & emotion_intensity['high'], reviewsentiment['negative'])
rule9 = ctrl.Rule(sentiment_score['neutral'] & emotion_intensity['medium'] & positive_words['many'], reviewsentiment['neutral'])
rule10 = ctrl.Rule(sentiment_score['positive'] & positive_words['many'] & emotion_intensity['high'], reviewsentiment['positive'])

control_system = ctrl.ControlSystem([
    rule1, rule2, rule3, rule4,
    rule5, rule6, rule7,
    rule8, rule9, rule10
])
review_sentiment = ctrl.ControlSystemSimulation(control_system)

review_sentiment.input['sentiment_score'] = 0.8
review_sentiment.input['emotion_intensity'] = 5
review_sentiment.input['positive_words'] = 6
review_sentiment.input['negative_words'] = 1
review_sentiment.compute()

print(f"Review Sentiment Classification: {review_sentiment.output['sentiment']}")

reviewsentiment.view(sim=review_sentiment)
